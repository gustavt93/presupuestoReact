{"version":3,"sources":["Components/header.js","Components/formulario.js","Components/gasto.js","Components/presupuesto.js","Components/resto.js","Components/lista.js","App.js","serviceWorker.js","index.js"],"names":["header","react_default","a","createElement","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","placeholder","Component","formulario","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","enviarGasto","e","preventDefault","descripcionRef","current","value","montoRef","fechaRef","objGasto","uuid","descripcion","monto","fecha","currentTarget","reset","agregarGasto","setState","error","React","createRef","state","onSubmit","htmlFor","readOnly","defaultValue","aria-describedby","ref","gasto","presupuesto","resto","getAlertColor","_this$props","lista","gastos","Fragment","Components_presupuesto","Components_resto","map","Components_gasto","key","App","_this$state","push","console","log","Components_header","Components_formulario","Components_lista","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.144d9a04.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass header extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n          <a className=\"navbar-brand\" href=\"#\">Navbar</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor02\" aria-controls=\"navbarColor02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarColor02\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item active\">\r\n                <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">Features</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">Pricing</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">About</a>\r\n              </li>\r\n            </ul>\r\n            <form className=\"form-inline my-2 my-lg-0\">\r\n              <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" />\r\n              <button className=\"btn btn-secondary my-2 my-sm-0\" type=\"submit\">Search</button>\r\n            </form>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default header;","import React, { Component } from 'react';\r\nimport uuid from 'uuid';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass formulario extends Component {\r\n\r\n  descripcionRef;\r\n  montoRef;\r\n  fechaRef;\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.descripcionRef = React.createRef();\r\n    this.montoRef = React.createRef();\r\n    this.fechaRef = React.createRef();\r\n\r\n    this.state = {\r\n      error: false\r\n    };\r\n  };\r\n\r\n  enviarGasto = (e) => {\r\n    // Para que la pagina no se refresque o actualice\r\n    e.preventDefault();\r\n\r\n    if (this.descripcionRef.current.value == \"\" || this.montoRef.current.value == \"\" || this.fechaRef.current.value == \"\") {\r\n      this.setState({\r\n        error: true\r\n      })\r\n      return;\r\n    }\r\n\r\n    let objGasto = {\r\n      id: uuid(),\r\n      descripcion: this.descripcionRef.current.value,\r\n      monto: this.montoRef.current.value,\r\n      fecha: this.fechaRef.current.value\r\n    }\r\n\r\n    e.currentTarget.reset();\r\n    this.props.agregarGasto(objGasto);\r\n    this.setState({\r\n      error: false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.enviarGasto}>\r\n        <fieldset>\r\n          <legend>Gastos y Presupuestos</legend>\r\n          <div className=\"form-group row\">\r\n            <label htmlFor=\"staticEmail\" className=\"col-sm-2 col-form-label\">Email</label>\r\n            <div className=\"col-sm-10\">\r\n              <input type=\"text\" readOnly className=\"form-control-plaintext\" id=\"staticEmail\" defaultValue=\"email@example.com\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Descripcion del gasto</label>\r\n            <input type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"descripcionGasto\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Ejm: Comida\"\r\n              ref={this.descripcionRef} />\r\n            {/* <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small> */}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputPassword1\">Monto del gasto</label>\r\n            <input type=\"number\"\r\n              className=\"form-control\"\r\n              id=\"montoGasto\"\r\n              placeholder=\"Ejem: 100\"\r\n              ref={this.montoRef} />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputPassword1\">Fecha</label>\r\n            <input type=\"date\"\r\n              className=\"form-control\"\r\n              id=\"fechaGasto\"\r\n              ref={this.fechaRef} />\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n        </fieldset>\r\n        {\r\n          this.state.error ?\r\n            <div className=\"alert alert-danger mt-3\">\r\n              Todos los campos son obligatorios\r\n          </div> : null\r\n        }\r\n\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nformulario.propTypes = {\r\n  agregarGasto: PropTypes.func.isRequired\r\n}\r\nexport default formulario;","import React, { Component } from 'react';\r\n\r\nclass gasto extends Component {\r\n  render() {\r\n    return (\r\n      <a href=\"#\" className=\"list-group-item list-group-item-action flex-column align-items-start\">\r\n        <div className=\"d-flex w-100 justify-content-between\">\r\n          <h5 className=\"mb-1\">S/. {this.props.gasto.monto}</h5>\r\n          <small>3 days ago</small>\r\n        </div>\r\n        <p className=\"mb-1\">{this.props.gasto.descripcion}</p>\r\n        <small>{this.props.gasto.id}</small>\r\n      </a>\r\n    );\r\n  }\r\n}\r\n\r\nexport default gasto;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass presupuesto extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"alert alert-primary\">\r\n        Tu presupuesto: <strong>S/. {this.props.presupuesto}</strong>\r\n      </div>    \r\n    );\r\n  }\r\n}\r\npresupuesto.propTypes = {\r\n  presupuesto: PropTypes.number.isRequired\r\n}\r\n\r\nexport default presupuesto;","import React, { Component } from 'react';\r\n\r\nclass resto extends Component {\r\n\r\n  getAlertColor = () => {\r\n    const { presupuesto, resto } = this.props;\r\n    if(resto >= presupuesto/2) {\r\n      return \"alert alert-success\";\r\n    } else if(resto >= presupuesto/4) {\r\n      return \"alert alert-warning\";\r\n    } else {\r\n      return \"alert alert-danger\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.getAlertColor()}>\r\n        Te quedan: <strong>S/. {this.props.resto}</strong>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default resto;","import React, { Component } from 'react';\r\nimport Gasto from './gasto';\r\nimport Presupuesto from './presupuesto';\r\nimport Resto from './resto';\r\n\r\nclass lista extends Component {\r\n\r\n  // renderizarGastos = () => {\r\n  //   let vistas = [];\r\n  //   this.props.gastos.array.forEach(gasto => {\r\n  //     vistas.push(<Gasto key={gasto.id} gasto={gasto} />)\r\n  //   });\r\n  //   return vistas;\r\n  // }\r\n\r\n  render() {\r\n    let { gastos } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <legend>Lista de Gastos</legend>\r\n        {/* presupuesto */}\r\n        <Presupuesto presupuesto={this.props.presupuesto} />\r\n\r\n\r\n        {/* lo que te queda */}\r\n        <Resto resto={this.props.resto} presupuesto={this.props.presupuesto}/>\r\n        <div className=\"list-group\">\r\n          \r\n          {gastos.map(gasto => <Gasto key={gasto.id} gasto={gasto} />)}\r\n        </div>\r\n      </React.Fragment>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default lista;","import React, { Component } from 'react';\nimport Header from './Components/header';\nimport Formulario from './Components/formulario';\nimport Lista from './Components/lista';\nimport gasto from './Components/gasto';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      gastos: [],\n      presupuesto: 1000,\n      resto: 1000\n    }\n  }\n\n  agregarGasto = (objGasto) => {\n    let { gastos, resto } = this.state;\n    gastos.push(objGasto);\n    resto = resto - objGasto.monto;\n    if(resto >= 0) {\n      this.setState({\n        gastos,\n        resto\n      })\n    } else {\n      console.log(\"Nada\");\n    }\n    \n  }\n\n  render() {\n    return (\n      // React.Fragment: Es como un div\n      <React.Fragment>\n        <Header />\n        <div className=\"container mt-5\">\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <Formulario agregarGasto={this.agregarGasto} />\n            </div>\n            <div className=\"col-md-6\">\n              <Lista gastos={this.state.gastos} presupuesto={this.state.presupuesto} resto={this.state.resto}/>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}